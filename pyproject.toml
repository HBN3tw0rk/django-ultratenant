[project]
name = "django-ultratenant"
version = "0.0.3"
description = "One django library to rule all multi-tenant."
readme = "README.md"
requires-python = ">=3.7"
license = {file = "LICENSE"}
keywords = ["ultratenant", "django", "tenant id", "multi-database", "multi-tenant", "multi-schema", "postgres"]
authors = [
  {name="Lucas Cezimbra", email="lucas@cezimbra.tec.br"},
]
maintainers = [{name="HBNetwork"}]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Framework :: Django",
  "Framework :: Django :: 3",
  "Framework :: Django :: 3.2",
]

[project.urls]
#homepage = "https://github.com/HBNetwork/django-ultratenant"
documentation = "https://github.com/HBNetwork/django-ultratenant/README.md"
repository = "https://github.com/HBNetwork/django-ultratenant"
#changelog = "https://github.com/HBNetwork/django-ultratenant/CHANGELOG.md"

dependencies = [
  "django>=3.2.7",
  "dj-database-url==1.0.0",
]

[project.optional-dependencies]
test = [
  "coverage",
  "coveralls",
  "dj_database_url",
  "flake8",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-django",
  "pytest-mock",
  "python-decouple",
  "tox",
]
build = [
  "flit>=3.4"
]

[build-system]
requires = ["flit_core>=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "ultratenant"

[tool.flit.sdist]
include = ["LICENSE", "README.md"]
exclude = ["contrib", "docs", "pytest.ini", "tox.ini", "test*"]

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py36, py37, py38, flake8

[travis]
python =
    3.8: py38
    3.7: py37
    3.6: py36

[testenv:flake8]
basepython = python
deps = flake8
commands = flake8 ultratenant tests

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -r{toxinidir}/requirements_dev.txt
; If you want to make tox run the tests with the same versions, create a
; requirements.txt with the pinned versions and uncomment the following line:
;     -r{toxinidir}/requirements.txt
commands =
    pip install -U pip
    pytest --basetemp={envtmpdir}

"""
